---
import { Moon, Sun } from "lucide-react";
import { cn, buttonVariants } from "@/lib/utils";
---

<button
  id="theme-toggle"
  class={cn(
    buttonVariants({ size: "icon", variant: "ghost" }),
    "cursor-pointer rounded-full"
  )}
>
  <Sun
    id="sun-icon"
    className="h-[1.2rem] w-[1.2rem] scale-100 rotate-0 transition-all dark:scale-0 dark:-rotate-90"
  />
  <Moon
    id="moon-icon"
    className="absolute h-[1.2rem] w-[1.2rem] scale-0 rotate-90 transition-all dark:scale-100 dark:rotate-0"
  />
  <span class="sr-only">Toggle theme</span>
</button>
<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };

  const setThemeAppearance = theme => {
    if (theme === "dark") {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }
    localStorage.setItem("theme", theme);
  };

  const setupToggle = () => {
    const toggleButton = document.getElementById("theme-toggle");
    if (!toggleButton) return;

    const toggleMode = () => {
      const isDarkMode = document.documentElement.classList.contains("dark");
      const newTheme = isDarkMode ? "light" : "dark";
      setThemeAppearance(newTheme);
    };

    toggleButton.addEventListener("click", toggleMode);
  };

  // Applica tema subito
  setThemeAppearance(getThemePreference());

  // Setup toggle iniziale
  setupToggle();

  // Dopo ogni navigazione SPA, riapplica tema e toggle
  document.addEventListener("astro:after-swap", () => {
    setThemeAppearance(getThemePreference());
    setupToggle();
  });
</script>
