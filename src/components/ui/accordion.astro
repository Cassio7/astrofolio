---
import { markdownToHtml } from "@/lib/markdown";
import { ChevronDown } from "lucide-react";

export type FAQType = {
  question: string;
  answer: string[];
};

export interface Props {
  faqs: FAQType[];
}

const { faqs } = Astro.props;

if (faqs.length === 0) {
  return "";
}
---

<div class="flex flex-col divide-y divide-border rounded-md border">
  {
    faqs.map((faq, index) => (
      <div class="faq-item">
        <button
          faq-question
          class="flex w-full items-center justify-between px-4 py-3 text-sm font-medium transition-colors hover:bg-accent"
          aria-expanded="false"
          aria-controls={`faq-answer-${index}`}
        >
          <span class="text-left">{faq.question}</span>
          <ChevronDown
            className="size-4 transition-transform duration-300 ease-in-out"
            faq-chevron
          />
        </button>
        <div
          id={`faq-answer-${index}`}
          faq-answer
          class="max-h-0 overflow-hidden transition-all duration-300 ease-in-out"
        >
          <div class="px-4 py-3">
            {faq.answer.map(answer => (
              <p
                class="prose dark:prose-invert prose-p:!text-xs"
                set:html={markdownToHtml(answer)}
              />
            ))}
          </div>
        </div>
      </div>
    ))
  }
</div>

<script data-astro-rerun>
  document.querySelectorAll("[faq-question]").forEach((el, index) => {
    el.addEventListener("click", () => {
      const answer = document.querySelector(`#faq-answer-${index}`);
      const chevron = el.querySelector("[faq-chevron]");

      if (!answer) return;

      const isOpen = answer.style.maxHeight && answer.style.maxHeight !== "0px";

      // Close all
      document.querySelectorAll("[faq-answer]").forEach(element => {
        element.style.maxHeight = "0px";
      });
      document.querySelectorAll("[faq-chevron]").forEach(icon => {
        icon.style.transform = "rotate(0deg)";
      });

      // Toggle current
      if (!isOpen) {
        answer.style.maxHeight = answer.scrollHeight + "px";
        chevron.style.transform = "rotate(180deg)";
      }
    });
  });
</script>
