---
import { navLinks } from "@/lib/constants";
import { cn } from "@/lib/utils";
import { Button } from "@/components/button";
import { Menu, X } from "lucide-react";

const pathname = Astro.url.pathname;
---

<div class="relative lg:hidden" id="mobile-nav-container">
    <Button
        variant="ghost"
        size="icon"
        className="rounded-full cursor-pointer "
        id="nav-toggle-btn"
    >
        <Menu id="menu-icon" className="size-5 transition-all" />
        <X id="close-icon" className="absolute size-5 transition-all scale-0" />
        <span class="sr-only">Toggle menu</span>
    </Button>

    <div
        id="mobile-menu"
        class="justify-center items-center gap-6 flex flex-col fixed min-h-screen top-14 border w-3/4 bg-background right-0 transform translate-x-full transition-transform duration-300 ease-in-out z-50"
    >
        {
            navLinks.map((link) => (
                <a
                    href={link.href}
                    class={cn(
                        "group relative flex font-medium flex-col items-center justify-center text-sm text-foreground/70 hover:text-primary duration-150",
                    )}
                >
                    <span
                        class={cn(
                            "mb",
                            pathname === link.href && "text-primary",
                        )}
                    >
                        {link.label}
                    </span>
                    <span
                        class={cn(
                            "h-[1px] absolute -bottom-1 bg-primary rounded-full transition-all duration-150",
                            pathname === link.href ? "w-full" : "w-0",
                            "group-hover:w-full",
                        )}
                    />
                </a>
            ))
        }
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const toggleBtn = document.getElementById("nav-toggle-btn")!;
        const mobileMenu = document.getElementById("mobile-menu")!;
        const menuIcon = document.getElementById("menu-icon")!;
        const closeIcon = document.getElementById("close-icon")!;

        let isMenuOpen = false;

        function toggleMenu() {
            isMenuOpen = !isMenuOpen;

            if (isMenuOpen) {
                // Open the menu
                mobileMenu.classList.remove("translate-x-full");
                mobileMenu.classList.add("translate-x-0");

                // Switch icons
                menuIcon.classList.toggle("scale-0");
                closeIcon.classList.toggle("scale-100");
            } else {
                // Close the menu
                mobileMenu.classList.remove("translate-x-0");
                mobileMenu.classList.add("translate-x-full");

                // Switch icons
                closeIcon.classList.toggle("scale-100");
                menuIcon.classList.toggle("scale-0");
            }
        }

        // Add click event listener to the toggle button
        toggleBtn.addEventListener("click", toggleMenu);

        // Close menu when clicking outside
        document.addEventListener("click", (event) => {
            const target = event.target as Node;
            const container = document.getElementById("mobile-nav-container");

            if (isMenuOpen && container && !container.contains(target)) {
                toggleMenu();
            }
        });

        // Close menu when clicking on a link
        const navLinks = mobileMenu.querySelectorAll("a");
        navLinks.forEach((link) => {
            link.addEventListener("click", () => {
                if (isMenuOpen) toggleMenu();
            });
        });
    });
</script>
