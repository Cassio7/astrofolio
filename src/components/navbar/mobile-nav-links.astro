---
import { navLinks } from "@/lib/constants";
import { buttonVariants, cn } from "@/lib/utils";
import { Menu, X } from "lucide-react";

const pathname = Astro.url.pathname;
---

<div class="relative lg:hidden" id="mobile-nav-container">
  <button
    class={cn(
      buttonVariants({ size: "icon", variant: "ghost" }),
      "cursor-pointer rounded-full"
    )}
    id="nav-toggle-btn"
  >
    <Menu id="menu-icon" className="size-5 transition-all" />
    <X id="close-icon" className="absolute size-5 scale-0 transition-all" />
    <span class="sr-only">Toggle menu</span>
  </button>

  <div
    id="mobile-menu"
    class="fixed top-14 right-0 z-50 flex min-h-screen w-3/4 translate-x-full transform flex-col items-center justify-center gap-6 border bg-background transition-transform duration-300 ease-in-out"
  >
    {
      navLinks.map(link => (
        <a
          href={link.href}
          class={cn(
            "group relative flex flex-col items-center justify-center text-sm font-medium text-foreground/70 duration-150 hover:text-primary"
          )}
        >
          <span class={cn("mb", pathname === link.href && "text-primary")}>
            {link.label}
          </span>
          <span
            class={cn(
              "absolute -bottom-1 h-[1px] rounded-full bg-primary transition-all duration-150",
              pathname === link.href ? "w-full" : "w-0",
              "group-hover:w-full"
            )}
          />
        </a>
      ))
    }
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const toggleBtn = document.getElementById("nav-toggle-btn")!;
    const mobileMenu = document.getElementById("mobile-menu")!;
    const menuIcon = document.getElementById("menu-icon")!;
    const closeIcon = document.getElementById("close-icon")!;

    let isMenuOpen = false;

    function toggleMenu() {
      isMenuOpen = !isMenuOpen;

      if (isMenuOpen) {
        // Open the menu
        mobileMenu.classList.remove("translate-x-full");
        mobileMenu.classList.add("translate-x-0");

        // Switch icons
        menuIcon.classList.toggle("scale-0");
        closeIcon.classList.toggle("scale-100");
      } else {
        // Close the menu
        mobileMenu.classList.remove("translate-x-0");
        mobileMenu.classList.add("translate-x-full");

        // Switch icons
        closeIcon.classList.toggle("scale-100");
        menuIcon.classList.toggle("scale-0");
      }
    }

    // Add click event listener to the toggle button
    toggleBtn.addEventListener("click", toggleMenu);

    // Close menu when clicking outside
    document.addEventListener("click", event => {
      const target = event.target as Node;
      const container = document.getElementById("mobile-nav-container");

      if (isMenuOpen && container && !container.contains(target)) {
        toggleMenu();
      }
    });

    // Close menu when clicking on a link
    const navLinks = mobileMenu.querySelectorAll("a");
    navLinks.forEach(link => {
      link.addEventListener("click", () => {
        if (isMenuOpen) toggleMenu();
      });
    });
  });
</script>
